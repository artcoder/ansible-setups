#!/bin/bash
set -u

#user:full, group: read, others: none
umask 037

backup_folder="/var/spool/backup/"

# Create the backup folder if it doesn't exist
[ ! -d "$backup_folder" ] && mkdir -p "$backup_folder"

# Give the wheel group permission to the backup folder and below
chgrp -R wheel "$backup_folder"

# set the group sticky bit for the directory, so new files give permission to the group
chmod g+s "$backup_folder"

# to do: use "$backup_folder" below, instead of repeating the path. Add sparse file checking.
tar  -cpzf /var/spool/backup/backup-$(hostname -s)-$(date +"%Y-%m-%d_%H%M%S")-etc.tgz --exclude='/etc/shadow*' --exclude='/etc/gshadow*' /etc
tar  -cpzf /var/spool/backup/backup-$(hostname -s)-$(date +"%Y-%m-%d_%H%M%S")-home.tgz /home
tar  -cpzf /var/spool/backup/backup-$(hostname -s)-$(date +"%Y-%m-%d_%H%M%S")-logs.tgz --exclude='/var/log/lastlog' /var/log
tar  -cpzf /var/spool/backup/backup-$(hostname -s)-$(date +"%Y-%m-%d_%H%M%S")-www.tgz /var/www

mysqldump wordpress > /var/spool/backup/backup-$(hostname -s)-$(date +"%Y-%m-%d_%H%M%S")-wordpress.sql

# Maybe tar the database dump file?

# Delete old backup files
# Find files
#  * named like /var/spool/backup/backup-
#  * that are regular files
#  * that are at least 90 days old.
# Delete them
find /var/spool/backup/backup-* -type f -mtime +90 -delete
