---
# To install WordPress on a low-RAM CentOS 8 cloud server using Ansible 2.7

- hosts: wordpress

# The user Ansible will logon to SSH on the clients as
  remote_user: centos
  become: yes

  vars_files:
    - "configure.yaml"
    - "secret.yml"


  # In case the managed server does not have Python 3 installed:
  gather_facts: False
  pre_tasks:
  - name: Install Python 3.6 for Ansible to use
    raw: test -e /usr/bin/python3 || (dnf install python36 -y)
    register: output
    changed_when: output.stdout != ""
    tags: always
  - setup: # Now that Python is installed, gather_facts


    
  tasks:

    # Add a swap file so dnf / MariaDB can run on a low RAM machine.
    - import_tasks: swap-file.yaml


    - name: Upgrade all packages
      dnf:
       name: "*"
       state: latest

    - name: Set the hostname
      command: hostnamectl set-hostname {{ website_domain_name }}

    - name: Install epel-release package
      dnf:
       name: epel-release
       state: latest

#    - name: Install EPEL repository configuration package
#      dnf:
#       name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
#       state: latest

    - name: Install utility packages
      dnf:
        name:
          - nano
          - mc
          - net-tools
          - unzip
          - mailx
          - fail2ban
          - dnf-automatic
          - dnf-utils
          - aide
          - haveged
          - chrony
          - postfix
        state: latest

    - name: Add an email alias to forward root's email to
      lineinfile:
        path: /etc/aliases
        regexp: '^.?root: .*$'
        line: 'root: {{ email_to }}'
        backup: yes

    - name: Apply the email alias
      command: newaliases

    - name: Enable and start the haveged service for better entropy
      service:
       name: haveged
       enabled: yes
       state: started

    - name: Add fail2ban filter for Wordpress logons
      copy:
        src: './apache-wordpress-logon.conf'
        dest: '/etc/fail2ban/filter.d/apache-wordpress-logon.conf'
        backup: yes
        group: root
        owner: root
        mode: u+rw,g=r,o=r

    - name: Define fail2ban jails for logons to SSH and Wordpress
      copy:
        src: './jail.local'
        dest: '/etc/fail2ban/jail.local '
        backup: yes
        group: root
        owner: root
        mode: u+rw,g=r,o=r

    - name: Enable and start the fail2ban service to delay brute force attacks
      service:
       name: fail2ban
       enabled: yes
       state: restarted

    - name: Enable and start the firewall service
      service:
       name: firewalld
       enabled: yes
       state: started

    - name: Allow SSH through the local firewall
      firewalld:
        service: ssh
        permanent: yes
        immediate: yes
        state: enabled

    - name: Allow Network Time Protocol through the local firewall
      firewalld:
        service: ntp
        permanent: yes
        immediate: yes
        state: enabled
    
    - name: Enable and start chronyd service
      service:
        name: chronyd
        enabled: yes
        state: started

    - name: Set dnf-automatic to download patches
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^download_updates = .*$'
        line: 'download_updates = yes'
        backup: yes
        
    - name: Set dnf-automatic to install patches
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^apply_updates = .*$'
        line: 'apply_updates = yes'
        backup: yes

    - name: Enable and start the dnf-automatic.timer service
      service:
       name: dnf-automatic.timer
       enabled: yes
       state: started

    - name: Set dnf-automatic to email messages about patches daily
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^emit_via = .*$'
        line: 'emit_via = email'
        backup: yes

#    - name: Set dnf-automatic to send email as the from address
#      lineinfile:
#        path: /etc/dnf/automatic.conf
#        regexp: '^email_from = .*$'
#        line: 'email_from = {{ email_from }}'
#        backup: yes

    - name: Set dnf-automatic to email the to address
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^email_to = .*$'
        line: 'email_to = {{ email_to }}'
        backup: yes

    #- name: Set dnf-automatic send email through the smtp host
    #  lineinfile:
    #    path: /etc/dnf/automatic.conf
    #    regexp: '^email_host = .*$'
    #    line: 'email_host = {{ email_host }}'
    #    backup: yes

    - name: Add a cron job to reboot daily if needed for patches
      copy:
        src: './reboot-for-updates.cron'
        dest: '/etc/cron.daily/reboot-for-updates.cron'
        backup: yes
        group: root
        owner: root
        mode: u+rwx,g=rx,o=rx

    - name: Set the minimum password length
      lineinfile:
        path: /etc/security/pwquality.conf
        regexp: '^minlen = .*$'
        line: 'minlen = 12'
        backup: yes

    - name: Set the minimum character classes in password
      lineinfile:
        path: /etc/security/pwquality.conf
        regexp: '^minclass = .*$'
        line: 'minclass = 3'
        backup: yes

    - name: Initialize the AIDE database - takes about 10 minutes
      shell: aide --init && mv -n /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
               creates="/var/lib/aide/aide.db.gz"

    - name: Add a cron job to update the AIDE database and email results
      copy:
        src: './aide-email.cron'
        dest: '/etc/cron.daily/aide-email.cron'
        backup: yes
        group: root
        owner: root
        mode: u+rwx,g=,o=

    - name: Add a cron job to make backups and delete old ones
      copy:
        src: './make-backups.cron'
        dest: '/etc/cron.weekly/make-backups.cron'
        backup: yes
        group: root
        owner: root
        mode: u+rwx,g=rx,o=rx
        
        
    # Install HTTPd / Apache
    - import_tasks: httpd.yaml

    # Install PHP
    - import_tasks: php.yaml
    
    - name: Restart the httpd service to enable PHP
      service:
       name: httpd
       state: restarted

    # Install MariaDB
    - import_tasks: mariadb.yaml
    
    # Install Wordpress
    - import_tasks: wordpress.yaml



    - name: Allow HTTP through the local firewall
      firewalld:
        service: http
        permanent: yes
        immediate: yes
        state: enabled

    - name: Allow HTTPS through the local firewall
      firewalld:
        service: https
        permanent: yes
        immediate: yes
        state: enabled

...